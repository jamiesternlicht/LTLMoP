# This is a configuration definition file for the example "iRobotCreatewithpickup".
# Format details are described at the beginning of each section below.


======== General Config ========

Actuator_Proposition_Mapping: # Mapping between actuator propositions and actuator handler functions
blink = share.dummyActuator.setActuator(name="blink")
pickup = OptimusSecundus.iRobotCreateActuator.pickup()
sing = share.dummyActuator.setActuator(name="sing")
goToMarker = share.dummyActuator.setActuator(name="goToM")
drop = OptimusSecundus.iRobotCreateActuator.drop()
driveToMarker = OptimusSecundus.iRobotCreateActuator.goToMarker()

Initial_Truths: # Initially true propositions
search

Main_Robot: # The name of the robot used for moving in this config
OptimusSecundus

Name: # Configuration name
newmap

Sensor_Proposition_Mapping: # Mapping between sensor propositions and sensor handler functions
cliff_right = share.dummySensor.buttonPress(button_name="cliff_right",init_value=False)
wall = share.dummySensor.buttonPress(button_name="wall",init_value=False)
notGoingTowardTarget = share.dummySensor.buttonPress(button_name="notGoingTowardTarget",init_value=False)
see = OptimusSecundus.iRobotCreateSensor.nearViconMarkers(detection_range=0.8)
cliff_left = share.dummySensor.buttonPress(button_name="cliff_left",init_value=False)
cliffFront_left = share.dummySensor.buttonPress(button_name="cliffFront_left",init_value=False)
wheelDrop_caster = share.dummySensor.buttonPress(button_name="wheelDrop_caster",init_value=False)
markersNearBy = share.dummySensor.buttonPress(button_name="markersNear",init_value=False)
bump_left = share.dummySensor.buttonPress(button_name="bump_l",init_value=False)
button_advance = share.dummySensor.buttonPress(button_name="button_advance",init_value=False)
wheelDrop_left = share.dummySensor.buttonPress(button_name="wheelDrop_left",init_value=False)
bump_right = share.dummySensor.buttonPress(button_name="bump_r",init_value=False)
button_play = share.dummySensor.buttonPress(button_name="button_play",init_value=False)
cliffFront_right = share.dummySensor.buttonPress(button_name="cliffFront_right",init_value=False)
wheelDrop_right = share.dummySensor.buttonPress(button_name="wheelDrop_right",init_value=False)
virtual_wall = share.dummySensor.buttonPress(button_name="virtual_wall",init_value=False)
arrive = OptimusSecundus.iRobotCreateSensor.arrivedAtMarker()


======== Robot1 Config ========

ActuatorHandler: # Actuator handler file in robots/Type folder
iRobotCreateActuator()

DriveHandler: # Input value for robot drive handler, refer to file inside the handlers/drive folder
differentialDrive(d=0.6)

InitHandler: # Input value for robot init handler, refer to the init file inside the handlers/robots/Type folder
iRobotCreateInit(listenIP="0.0.0.0",broadCastIP="192.168.1.120",createPort=8865,beaglePort=8866,artagPort=8844,sonarPort=8833,buffer=1024)

LocomotionCommandHandler: # Input value for robot locomotion command handler, refer to file inside the handlers/robots/Type folder
iRobotCreateLocomotionCommand()

MotionControlHandler: # Input value for robot motion control handler, refer to file inside the handlers/motionControl folder
vectorController()

PoseHandler: # Input value for robot pose handler, refer to file inside the handlers/pose folder
viconPose(host="10.0.0.102",port=800,x_VICON_name="roomba_no_arm:roomba_no_arm <t-X>",y_VICON_name="roomba_no_arm:roomba_no_arm <t-Y>",theta_VICON_name="roomba_no_arm:roomba_no_arm <a-Z>")

RobotName: # Robot Name
OptimusSecundus

SensorHandler: # Sensor handler file in robots/Type folder
iRobotCreateSensor()

Type: # Robot type
iRobotCreate

