<?xml version="1.0" ?>
<project>
  <signals>
    <signal>
      <name>
        e.person
      </name>
      <kind>
        E
      </kind>
      <type>
        boolean
      </type>
      <notes>
         
      </notes>
    </signal>
    <signal>
      <name>
        e.hazardous_item
      </name>
      <kind>
        E
      </kind>
      <type>
        boolean
      </type>
      <notes>
         
      </notes>
    </signal>
    <signal>
      <name>
        s.snake
      </name>
      <kind>
        S
      </kind>
      <type>
        boolean
      </type>
      <notes>
         
      </notes>
    </signal>
    <signal>
      <name>
        s.cross
      </name>
      <kind>
        S
      </kind>
      <type>
        boolean
      </type>
      <notes>
         
      </notes>
    </signal>
    <signal>
      <name>
        s.carrying_item
      </name>
      <kind>
        S
      </kind>
      <type>
        boolean
      </type>
      <notes>
         
      </notes>
    </signal>
  </signals>
  <requirements>
    <requirement>
      <name>
        env init 0
      </name>
      <property>
        TRUE
      </property>
      <kind>
        A
      </kind>
      <notes>
         
      </notes>
      <toggled>
        1
      </toggled>
    </requirement>
    <requirement>
      <name>
        sys init 0
      </name>
      <property>
        ((s.bit0=0&amp;&amp;s.bit1=0&amp;&amp;s.bit2=0)||(s.bit0=0&amp;&amp;s.bit1=0&amp;&amp;s.bit2=1)||(s.bit0=0&amp;&amp;s.bit1=1&amp;&amp;s.bit2=0)||(s.bit0=0&amp;&amp;s.bit1=1&amp;&amp;s.bit2=1)||(s.bit0=1&amp;&amp;s.bit1=0&amp;&amp;s.bit2=0)||(s.bit0=1&amp;&amp;s.bit1=0&amp;&amp;s.bit2=1)||(s.bit0=1&amp;&amp;s.bit1=1&amp;&amp;s.bit2=0)||(s.bit0=1&amp;&amp;s.bit1=1&amp;&amp;s.bit2=1))
      </property>
      <kind>
        G
      </kind>
      <notes>
         
      </notes>
      <toggled>
        1
      </toggled>
    </requirement>
    <requirement>
      <name>
        env tran 0
      </name>
      <property>
        G(TRUE)
      </property>
      <kind>
        A
      </kind>
      <notes>
         
      </notes>
      <toggled>
        1
      </toggled>
    </requirement>
    <requirement>
      <name>
        sys tran 0
      </name>
      <property>
        G(((s.bit0=0&amp;&amp;s.bit1=0&amp;&amp;s.bit2=0))-&gt;((((X(s.bit0=0))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=1))))G(((s.bit0=0&amp;&amp;s.bit1=0&amp;&amp;s.bit2=1))-&gt;((((X(s.bit0=0))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=0))))G(((s.bit0=0&amp;&amp;s.bit1=1&amp;&amp;s.bit2=0))-&gt;((((X(s.bit0=0))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=1))))G(((s.bit0=0&amp;&amp;s.bit1=1&amp;&amp;s.bit2=1))-&gt;((((X(s.bit0=0))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=0))))G(((s.bit0=1&amp;&amp;s.bit1=0&amp;&amp;s.bit2=0))-&gt;((((X(s.bit0=1))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=1))))G(((s.bit0=1&amp;&amp;s.bit1=0&amp;&amp;s.bit2=1))-&gt;((((X(s.bit0=1))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=0))))G(((s.bit0=1&amp;&amp;s.bit1=1&amp;&amp;s.bit2=0))-&gt;((((X(s.bit0=1))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=1))))G(((s.bit0=1&amp;&amp;s.bit1=1&amp;&amp;s.bit2=1))-&gt;((((X(s.bit0=1))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=1))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=0))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=0))&amp;&amp;(X(s.bit2=0))))||(((X(s.bit0=1))&amp;&amp;(X(s.bit1=1))&amp;&amp;(X(s.bit2=0))))G((((X(e.person=1))))&lt;-&gt;((X(s.snake=1))))
      </property>
      <kind>
        G
      </kind>
      <notes>
         
      </notes>
      <toggled>
        1
      </toggled>
    </requirement>
    <requirement>
      <name>
        env fair 0
      </name>
      <property>
        G(F(TRUE))
      </property>
      <kind>
        A
      </kind>
      <notes>
         
      </notes>
      <toggled>
        1
      </toggled>
    </requirement>
    <requirement>
      <name>
        sys fair 0
      </name>
      <property>
        G(F((!(e.person=1))-&gt;(((s.bit0=1&amp;&amp;s.bit1=0&amp;&amp;s.bit2=1))))
      </property>
      <kind>
        G
      </kind>
      <notes>
         
      </notes>
      <toggled>
        1
      </toggled>
    </requirement>
    <requirement>
      <name>
        sys fair 1
      </name>
      <property>
        G(F((!(e.person=1))-&gt;(((s.bit0=1&amp;&amp;s.bit1=0&amp;&amp;s.bit2=0))))
      </property>
      <kind>
        G
      </kind>
      <notes>
         
      </notes>
      <toggled>
        1
      </toggled>
    </requirement>
    <requirement>
      <name>
        sys fair 2
      </name>
      <property>
        G(F((!(e.person=1))-&gt;(((s.bit0=0&amp;&amp;s.bit1=0&amp;&amp;s.bit2=1))))
      </property>
      <kind>
        G
      </kind>
      <notes>
         
      </notes>
      <toggled>
        1
      </toggled>
    </requirement>
    <requirement>
      <name>
        sys fair 3
      </name>
      <property>
        G(F((!(e.person=1))-&gt;(((s.bit0=0&amp;&amp;s.bit1=0&amp;&amp;s.bit2=0)))))
      </property>
      <kind>
        G
      </kind>
      <notes>
         
      </notes>
      <toggled>
        1
      </toggled>
    </requirement>
  </requirements>

  <property_assurance>
    <possibilities/>
    <assertions/>
  </property_assurance>
  <property_simulation/>
  <categories>
    <category>
      <name>
        New
      </name>
      <editable>
        no
      </editable>
      <notes>
        This is the category of those traces that have been just created
      </notes>
    </category>
    <category>
      <name>
        Default
      </name>
      <editable>
        no
      </editable>
      <notes>
        This is the default category for traces
      </notes>
    </category>
    <category>
      <name>
        Out of Date
      </name>
      <editable>
        no
      </editable>
      <notes>
        Contains the traces whose dependencies might be no longer consistent
      </notes>
    </category>
    <category>
      <name>
        Trash
      </name>
      <editable>
        no
      </editable>
      <notes>
        Contains the traces that have been deleted
      </notes>
    </category>
  </categories>
  <active_view>
    re
  </active_view>
  <notes>
    
  </notes>
</project>
